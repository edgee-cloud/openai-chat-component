manifest-version = 1

[component]
name = "OpenAI Chat"
version = "1.0.0"

category = "edge-function"
subcategory = "wasm-function"
description = """
# OpenAI Chat Component

[https://www.edgee.cloud/edgee/openai-chat](https://www.edgee.cloud/edgee/openai-chat)

## Overview

The **OpenAI Chat** component by Edgee enables seamless integration of OpenAI-compatible APIs into your Edgee projects.
This component allows you to interact with OpenAI's Chat API directly at the edge, providing low-latency responses and efficient handling of chat interactions.

---

## Key Features & Benefits

### Features

- **Direct API Integration**: Interact with OpenAI-compatible APIs directly.
- **Edge Deployment**: Reduce latency through edge execution.
- **Easy Integration**: Simple to set up within Edgee projects.
- **Chat Support**: Full support for various conversational use cases.

### Benefits

- **Improved UX**: Enhanced user experience with quick response times.
- **Scalability**: Scalable architecture suitable for growing demands.
- **Quick Setup**: Easy setup and configuration within existing Edgee workflows.

---

## Use Cases

- **AI-Powered Chatbots**: Implement responsive and intelligent virtual assistants.
- **Customer Support**: Enhance support systems with real-time AI responses.
- **Interactive Interfaces**: Build engaging, conversational user interactions.
- **Conversational AI**: Embed chat capabilities into new or existing applications.
"""
documentation = "https://github.com/edgee-cloud/openai-chat-component"
repository = "https://github.com/edgee-cloud/openai-chat-component"
language = "Rust"
wit-version = "1.0.0"
icon-path = "openai.png"

[component.build]
command = "cargo build --target wasm32-wasip2 --release --target-dir ./target && rm -f ./openai.wasm && mv ./target/wasm32-wasip2/release/openai_chat_component.wasm ./openai.wasm"
output_path = "openai.wasm"

[component.settings.api_key]
title = "API Key"
type = "string"
secret = true
required = true
description = "Your OpenAI API key for authentication"

[component.settings.model]
title = "Model"
type = "string"
required = true
description = "The model to use for the API call, like gpt-3.5-turbo"

[component.settings.max_completion_tokens]
title = "Max Completion Tokens (Optional)"
type = "number"
description = "The maximum number of tokens to generate in the completion. By default it's unlimited."

[component.settings.default_role]
title = "Default Role (Optional)"
type = "string"
description = "The default role to use for messages. By default it's 'user'."


[component.settings.default_system_prompt]
title = "Default System Prompt (Optional)"
type = "string"
description = "The default system prompt to use for messages. By default it's 'You are a helpful assistant.'"

[component.settings.api_hostname]
title = "API Hostname (Optional)"
type = "string"
description = "The API hostname to use for requests. By default it's 'api.openai.com'. If you are using a different OpenAI-compatible API, you can specify it here."
